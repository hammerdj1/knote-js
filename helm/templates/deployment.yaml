apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nodetest.fullname" . }}
  labels:
    {{- include "nodetest.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "nodetest.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        {{- include "nodetest.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nodetest.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
#            - name: health
#              containerPort: 8778
#              protocol: TCP
#          livenessProbe:
#            httpGet:
#              path: /health
#              port: health
#            initialDelaySeconds: {{ .Values.health.initialDelaySeconds }}
#            timeoutSeconds: {{ .Values.health.timeoutSeconds }}
#            periodSeconds: {{ .Values.health.periodSeconds }}
#            failureThreshold: {{ .Values.health.failureThreshold }}
#            successThreshold: {{ .Values.health.successThreshold }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - mountPath: /etc/configmap
            name: nodetest-config
            readOnly: true
          - mountPath: /etc/secret
            name: nodetest-secret
            readOnly: true
      volumes:
        - name: nodetest-config
          configMap:
            name: nodetest
        - name: nodetest-secret
          secret:
            secretName: nodetest
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
